// <auto-generated />
using System;
using IssueTracker.EFCore21.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IssueTracker.EFCore21.Data.Migrations
{
    [DbContext(typeof(IssuesDbContext))]
    partial class IssuesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("IssueTracker.Core.Model.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AssigneeId");

                    b.Property<string>("ConcurrencyToken")
                        .IsConcurrencyToken();

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<long>("LastUpdated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("Priority");

                    b.Property<Guid?>("ReporterId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("Priority");

                    b.HasIndex("ReporterId");

                    b.HasIndex("Title");

                    b.ToTable("Issues");

                    b.HasData(
                        new { Id = 1, ConcurrencyToken = "4f0c7ea0-6e38-4610-9224-cfba1056ee07", Description = "First issue", LastUpdated = 637765920000000000L, Priority = 1, Title = "First", Type = 0 },
                        new { Id = 2, ConcurrencyToken = "57935055-4216-4132-b2f5-f146eba5d613", Description = "Second issue", LastUpdated = 637782336000000000L, Priority = 0, Title = "Second", Type = 1 },
                        new { Id = 3, ConcurrencyToken = "bb29910b-f0e4-4958-98d1-cea4572a3b82", Description = "Third issue", LastUpdated = 637782336000000000L, Priority = 1, Title = "Third", Type = 1 }
                    );
                });

            modelBuilder.Entity("IssueTracker.Core.Model.LinkedIssue", b =>
                {
                    b.Property<int>("ParentIssueId");

                    b.Property<int>("ChildIssueId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LinkType");

                    b.HasKey("ParentIssueId", "ChildIssueId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("ChildIssueId");

                    b.HasIndex("ParentIssueId");

                    b.ToTable("LinkedIssue");

                    b.HasData(
                        new { ParentIssueId = 2, ChildIssueId = 3, Id = 1, LinkType = 0 }
                    );
                });

            modelBuilder.Entity("IssueTracker.Core.ValueObjects.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FullName");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("IssueTracker.Core.Model.Issue", b =>
                {
                    b.HasOne("IssueTracker.Core.ValueObjects.User", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeId");

                    b.HasOne("IssueTracker.Core.ValueObjects.User", "Reporter")
                        .WithMany()
                        .HasForeignKey("ReporterId");
                });

            modelBuilder.Entity("IssueTracker.Core.Model.LinkedIssue", b =>
                {
                    b.HasOne("IssueTracker.Core.Model.Issue", "ChildIssue")
                        .WithMany("ChildIssueEntities")
                        .HasForeignKey("ChildIssueId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IssueTracker.Core.Model.Issue", "ParentIssue")
                        .WithMany("ParentIssueEntities")
                        .HasForeignKey("ParentIssueId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
